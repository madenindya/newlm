seed: 42
output_dir: outputs/en_trial442/
tokenizer:
  # Every params for BertWordPieceTokenizer.train
  config:
    vocab_size: 30000
    min_frequency: 2
  input_dir: examples/data/text/en_trial/
  max_len: 128
lm:
  model_type: "elmo-gpt"
  model:
    # Every params for transformers.BertConfig
    config:
      n_layer: 2
    create_params: # other params for LMBuilder.create
      # train_params: # params for Trainer.train inside LMBuilder.create
      #   resume_from_checkpoint: latest
      #   #   if resume_from_checkpoint: 'latest' would load from latest checkpoint in output_dir
      #   #   else would followed the official hf guideline
  hf_trainer:
    # total-size per-batch.
    # i.e. num_GPU * accum_step * batch-size = total-size
    total_batch_size: 256
    # Every params for transformers.TrainingArguments
    args:
      per_device_train_batch_size: 16
      max_steps: 300
      save_steps: 100
      save_total_limit: 2
      prediction_loss_only: true
      learning_rate: 0.0001
      warmup_steps: 10000
      weight_decay: 0.01
  train_path: newlm/lm/elmo/lm_builder.py
glue:
  from_scratch: false
  tasks: ["stsb", "wnli"] # if not defined, train all tasks
  hf_trainer:
    total_batch_size: 32
    args:
      evaluation_strategy: "epoch"
      save_strategy: "epoch"
      learning_rate: 0.00002
      per_device_train_batch_size: 16
      per_device_eval_batch_size: 16
      num_train_epochs: 2
      weight_decay: 0.01
  # cola: # custom training arguments for each task
  #   hf_trainer:
  #     args:
  #       learning_rate: 0.1
wandb:
  run_basename: exp-trial
